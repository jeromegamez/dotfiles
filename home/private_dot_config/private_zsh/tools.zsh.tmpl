# Initialize shell tools and integrations

# Initialize completions
if command -v uv &>/dev/null; then
    eval "$(uv generate-shell-completion zsh)"
fi

if command -v uvx &>/dev/null; then
    eval "$(uvx --generate-shell-completion zsh)"
fi

# if [[ -f "${XDG_CONFIG_HOME}/tenv/completion.zsh" ]]; then
#     source "${XDG_CONFIG_HOME}/tenv/completion.zsh"
# fi

if command -v op &>/dev/null; then
    # eval "$(op completion zsh)"; compdef _op op
    [[ -f "${XDG_CONFIG_HOME}/op/plugins.sh" ]] && source "${XDG_CONFIG_HOME}/op/plugins.sh"
fi

# if [[ -f "$XDG_DATA_HOME/google-cloud-sdk/completion.zsh.inc" ]]; then
#     source "$XDG_DATA_HOME/google-cloud-sdk/completion.zsh.inc"
# fi

if command -v chezmoi &>/dev/null; then
    eval "$(chezmoi completion zsh)"
fi

# Initialize zoxide
if command -v zoxide &>/dev/null; then
    eval "$(zoxide init zsh)"
fi

# Initialize atuin (shell history)
if command -v atuin &>/dev/null; then
    eval "$(atuin init zsh)"
fi

# Initialize fzf (fuzzy finder)
if command -v fzf &>/dev/null; then
    # Use fd if available (respects .gitignore by default)
    if command -v fd &>/dev/null; then
        export FZF_DEFAULT_COMMAND='fd --type f'
        export FZF_CTRL_T_COMMAND='fd --type f'
        export FZF_ALT_C_COMMAND='fd --type d'
    fi

    source <(fzf --zsh)
fi

# Google Cloud SDK path setup
[[ -f "$XDG_DATA_HOME/google-cloud-sdk/path.zsh.inc" ]] && source "$XDG_DATA_HOME/google-cloud-sdk/path.zsh.inc"

# Load ZSH plugins (only in interactive shells)
# The $- variable contains shell options, and *i* checks if interactive mode is enabled.
if [[ $- == *i* ]]; then
    _zsh_plugins=(
        "$XDG_DATA_HOME/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"
        "$XDG_DATA_HOME/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"  # Must be last
    )

    # Load plugins in order
    for plugin in "${_zsh_plugins[@]}"; do
        [[ -f "$plugin" ]] && source "$plugin"
    done
    unset _zsh_plugins plugin
fi
