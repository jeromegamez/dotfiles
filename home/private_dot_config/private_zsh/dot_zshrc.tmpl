# Environment variables
export LESSHISTFILE="$XDG_STATE_HOME"/less/history
export SHELL_SESSIONS_DISABLE=1
export GPG_TTY=$(tty)
unset PAGER

# History configuration
export HISTFILE="$XDG_STATE_HOME"/zsh/history
export HISTFILESIZE=1000000000
export HISTSIZE=1000000001 # set HISTSIZE > SAVEHIST

setopt EXTENDED_HISTORY         # include timestamp
setopt HIST_BEEP                # beep if attempting to access a history entry which isn't there
setopt HIST_EXPIRE_DUPS_FIRST   # trim dupes first if history is full
setopt HIST_FIND_NO_DUPS        # do not display previously found command
setopt HIST_IGNORE_ALL_DUPS     # remove previously found command when entering it again
setopt HIST_IGNORE_DUPS         # do not save duplicate of prior command
setopt HIST_IGNORE_SPACE        # do not save if line starts with space
setopt HIST_NO_STORE            # do not save history commands
setopt HIST_REDUCE_BLANKS       # strip superfluous blanks
setopt HIST_SAVE_NO_DUPS        # omit older duplicates of newer commands
setopt HIST_VERIFY              # expand command line without executing it
setopt INC_APPEND_HISTORY       # don't wait for shell to exit to save history lines

# Enable completions (after PATH is set)
zstyle ':completion::complete:*' use-cache on
zstyle ':completion:*' rehash true
autoload -Uz compinit && compinit

[[ -o interactive ]] && bindkey -e

# Load aliases
source "${XDG_CONFIG_HOME}/zsh/.aliases.zsh"

# Directory navigation (z/zoxide)
if command -v zoxide > /dev/null; then
    eval "$(zoxide init zsh)"
fi

# Load external tools and completions
source "${XDG_CONFIG_HOME}/tenv/completion.zsh"
source "${XDG_CONFIG_HOME}/zsh/.plugins.zsh.inc"

# Load nvm (lazy loading for performance)
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
nvm() {
    unset -f nvm
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm "$@"
}
node() {
    unset -f nvm node npm npx
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    node "$@"
}
npm() {
    unset -f nvm node npm npx
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    npm "$@"
}
npx() {
    unset -f nvm node npm npx
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    npx "$@"
}

# Initialize prompt (last)
export STARSHIP_CONFIG="${XDG_CONFIG_HOME}/starship/starship.toml"
eval "$(starship init zsh)"
